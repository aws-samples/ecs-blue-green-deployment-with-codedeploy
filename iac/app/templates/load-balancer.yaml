
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: 2010-09-09
Description: This template deploys an Application Load Balancer that exposes our various ECS services.
Metadata:
  version: 1.0.0
Parameters:
  pRoute53HostedZoneId:
    Description: The ID of the hosted zone that you want to create records in.
    Type: String
  pApp:
    Description: Name of the Application to which the resource belongs
    Type: String
  pCertificateArn:
    Description: Certificates for ALB
    Type: String
  pCloudWatchAlarmFlag:
    Description: This parameter defines if we need a cloudwatch alaram
    Type: String
  pLoadBalancerSecurityGroup: 
    Description: Load Balancer Security group. Output from Security-groups.yaml
    Type: String
  pMonitoringTopicArn:
    Description: Monitoring Topic Arn
    Type: String
  pRoute53Domain:
    Type: String
    Description: The route53 domain within the current account.
  pPublicSubnetIdentifiera:
    Type: 'AWS::EC2::Subnet::Id'
    Description: ID of the Public subnet where ALB resources will be created.
  pPublicSubnetIdentifierb:
    Type: 'AWS::EC2::Subnet::Id'
    Description: ID of the Public subnet where ALB resources will be created.
 
Conditions:
  EnableCloudWatchAlarm: !Equals [ !Ref pCloudWatchAlarmFlag, 'true' ]

Resources:

  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html
  rECSServiceRoute53:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub '${pApp}.${pRoute53Domain}'
      Type: A
      HostedZoneId: !Ref pRoute53HostedZoneId
      AliasTarget:
        HostedZoneId: !GetAtt rLoadBalancer.CanonicalHostedZoneID
        DNSName: !GetAtt rLoadBalancer.DNSName

  #Create a LoadBalancer for the Application
  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
  rLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        # Set protection enabled to true if ALB should not be deleted
        - Key: deletion_protection.enabled
          Value: 'false'
        - Key: idle_timeout.timeout_seconds
          Value: '180'
      # Scheme: internal
      Subnets:
        - !Ref pPublicSubnetIdentifiera
        - !Ref pPublicSubnetIdentifierb
      SecurityGroups:
        - !Ref pLoadBalancerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub '${pApp}-lb'

  #Create a LoadBalancer listener for the Application on port 443
  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html
  rLoadBalancerBlueListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref rLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: !Ref pCertificateArn
      DefaultActions:
        - Type: fixed-response # This is a fixed-response
          FixedResponseConfig:
            StatusCode: '200'
            ContentType: text/plain
            MessageBody: Https Hello world from LoadBalancer

  #Create a LoadBalancer listener for the Application on port 80 which redirects to port 443
  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html
  rLoadBalancerHttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            Host: '#{host}'
            Path: '/#{path}'
            Query: '#{query}'
            StatusCode: HTTP_302
      LoadBalancerArn: !Ref rLoadBalancer
      Port: 80
      Protocol: HTTP

  #Create a LoadBalancer listener for the Application on port 8443 which sends traffic to green version of app
  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html
  rLoadBalancerGreenListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref rLoadBalancer
      Port: 8443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: !Ref pCertificateArn
      DefaultActions:
        - Type: fixed-response # This is a fixed-response
          FixedResponseConfig:
            StatusCode: '200'
            ContentType: text/plain
            MessageBody: Https Hello world from LoadBalancer

  #Create a cloudwatch alarm for http5xxx status codes generated by the ALB when the number generated
  #exceeds 5 in a 120 second period. 
  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html
  rALBHTTPCodeELB5XXTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Application load balancer receives 5XX HTTP status codes from targets'
      Namespace: 'AWS/ApplicationELB'
      MetricName: HTTPCode_ELB_5XX_Count
      AlarmName: !Sub '${pApp}-HTTPCodeELB5XXTooHighAlarm'
      Statistic: Sum
      Period: 120
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 5
      AlarmActions:
        !If
          - EnableCloudWatchAlarm
          -
            - Ref: pMonitoringTopicArn
            # - Ref: pServiceNowTopicArn
          - !Ref AWS::NoValue
      Dimensions:
        - Name: rLoadBalancer
          Value: !GetAtt rLoadBalancer.LoadBalancerFullName

  #Create a cloudwatch alarm for http4xxx status code (Client errors). 
  #See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html
  #Alarm is created when the number of http4XX status codes exceeds 5 in a 120 second period
  rALBHTTPCodeELB4XXTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Application load balancer receives 4XX HTTP status codes from targets.'
      Namespace: 'AWS/ApplicationELB'
      MetricName: HTTPCode_ELB_4XX_Count
      AlarmName: !Sub '${pApp}-HTTPCodeELB4XXTooHighAlarm'
      Statistic: Sum
      Period: 120
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 5
      AlarmActions: !If
          - EnableCloudWatchAlarm
          -
            - Ref: pMonitoringTopicArn
            # - Ref: pServiceNowTopicArn
          - !Ref AWS::NoValue
      Dimensions:
        - Name: rLoadBalancer
          Value: !GetAtt rLoadBalancer.LoadBalancerFullName

Outputs:
  oLoadBalancerBlueListenerArn:
    Description: A reference to the EcsFargate app load balancer listener.
    Value: !Ref rLoadBalancerBlueListener
  oLoadBalancerFullName:
    Description: A reference to the refappsFargateSecauth app  load LoadBalancer
    Value: !GetAtt rLoadBalancer.LoadBalancerFullName
  oLoadBalancerGreenListenerArn:
    Description: A reference to the EcsFargate app load balancer green listener.
    Value: !Ref rLoadBalancerGreenListener